-content_for :head do
  %meta{name: "viewport", content: "initial-scale=1.0, user-scalable=no"}

  :javascript
    function initialize() {
      geocoder = new google.maps.Geocoder();
    }
    
    function loadScript() {
      var script = document.createElement("script");
      script.type = "text/javascript";
      script.src = "http://maps.googleapis.com/maps/api/js?key=AIzaSyCEY0Wtv2sMZZRW0Fb3hmutA-7ET0O-58o&sensor=true&callback=initialize";
      document.body.appendChild(script);
    }
    
    window.onload = loadScript;
    
    var isGeoCoded = false;
    
    function updateInspiringStoryWordCount() {
      var words = $('#profile_candidate_inspiring_story').val().match(/\S+/g);
      if (words != null) {
        $("#remaining_inspiring_story_words").text("Sisa kata: " + (500 - words.length));
      }
    }
        
    function updateMotivationWordCount() {
      var words = $('#profile_candidate_motivation').val().match(/\S+/g);
      if (words != null) {
        $("#remaining_motivation_words").text("Sisa kata: " + (200 - words.length));
      }
    }

    function updateCollaborationWordCount() {
      var words = $('#profile_candidate_collaboration').val().match(/\S+/g);
      if (words != null) {
        $("#remaining_collaboration_words").text("Sisa kata: " + (200 - words.length));
      }
    }
        
    $(document).ready(function() {
      updateMotivationWordCount();
      updateInspiringStoryWordCount();
      updateCollaborationWordCount();
      
      $("#profile_candidate_motivation").keyup(function() {
        updateMotivationWordCount();
      });
      $("#profile_candidate_inspiring_story").keyup(function() {
        updateInspiringStoryWordCount();
      });
      $("#profile_candidate_collaboration").keyup(function() {
        updateCollaborationWordCount();
      });
      
      var latitudes = ['', '4.69513', '-8.40952', '-6.40582', '-3.80065', '0.55251', '-6.21154', '-1.48518', '-7.09091', '-7.15097', 
        '-7.53606', '-0.27878', '-3.09264', '-1.68149', '1.64063', '0.56033', '-2.74105', '0.293347', '-4.55858', '-3.23846',
        '1.57100', '-8.65738', '-8.65293', '-4.35450', '-1.33612', '0.29335', '-2.84414', '-3.66880', '-1.43003', '-4.14491',
        '0.62469', '-0.73994', '-3.31944', '2.11535', '-7.79722']
      var longitudes = ['', '96.74940', '115.18892', '106.06402', '102.25620', '123.06550', '106.84517', '102.43806', '107.66889', '110.14026', 
        '112.23840', '111.47529', '115.28376', '113.38235', '116.41939', '123.05539', '106.44059', '101.706829', '105.40681', '130.14527',
        '127.80877', '121.07937', '117.36165', '139.36531', '133.17472', '101.70683', '119.23208', '119.97405', '121.44562', '122.17460',
        '123.97500', '100.80001', '103.91440', '99.54510', '110.36880']
      
      $("#profile_form").submit(function (event) {
        var latitude = $("#profile_candidate_latitude");
        var longitude = $("#profile_candidate_longitude");
        
        if (!isGeoCoded) {
          event.preventDefault();

          if (!(typeof geocoder === "undefined")) {
            var address = $("#profile_candidate_location").val();
            var province = $("#profile_candidate_province").val() + ", Indonesia";
            
            var selectedIndex = $("#profile_candidate_province").prop('selectedIndex')-1
            
            var provinceLatitude = "";
            var provinceLongitude = ""
            if (selectedIndex > 0) {
              provinceLatitude = latitudes[selectedIndex];
              provinceLongitude = longitudes[selectedIndex];
            }
                
            console.log("Looking for location by address...: ");
            console.log(address);
            
            geocoder.geocode({'address': address}, function(results, status) {
              if (status == google.maps.GeocoderStatus.OK) {
                if (provinceLatitude != "" && provinceLongitude != "") {
                  var deltaLatitude = Math.abs(results[0].geometry.location.lat() - provinceLatitude);
                  var deltaLongitude = Math.abs(results[0].geometry.location.lng() - provinceLongitude);
                  
                  console.log("Delta Latitude:");
                  console.log(deltaLatitude);
                  console.log("Delta Longitude:");
                  console.log(deltaLongitude);
                  
                  if (deltaLatitude > 10 || deltaLongitude > 10)
                  {
                    latitude.val(provinceLatitude);
                    longitude.val(provinceLongitude);
                    isGeoCoded = true;
                  }
                }
              
                if (!isGeoCoded) {
                  latitude.val(results[0].geometry.location.lat());
                  longitude.val(results[0].geometry.location.lng());
                }
                console.log("Found location: " + latitude.val() + ", " + longitude.val());
              } else {
                console.log("Looking for location by province...: ");
                console.log(province);
                
                latitude.val(provinceLatitude);
                longitude.val(provinceLongitude);

                console.log("Found location: " + latitude.val() + ", " + longitude.val());
              }
              isGeoCoded = true;
              
              $("#profile_form").submit();
            });
          } else {
            isGeoCoded = true;
            $("#profile_form").submit();
          }
        }
      });
    });


.span8
  .well
    = simple_form_for(@profile, :html => {:id => 'profile_form', :class => 'form-horizontal'}) do |f|
      = f.error_notification
      = display_base_errors @profile

      .form-inputs
        = f.input :fullname, :label => "Nama lengkap"
        = f.input :dob, :input_html => {:style => 'width:auto'}, :label => "Tanggal lahir", 
          start_year: Date.today.year - 30, end_year: Date.today.year - 12, order: [:day, :month, :year]
        = f.input :place_of_birth, :label => "Tempat lahir"
        = f.input :gender, :label => "Jenis kelamin", :as => :select, :collection => [["Laki-laki", 0], ["Perempuan", 1]]
        = f.input :religion, :label => "Agama", :collection => ["Islam", "Katolik", "Protestan", "Hindu", "Budha", "Konghuchu"]
        = f.input :location, :label => "Alamat lengkap (contoh: Jalan Kaliurang Km 10, Wonorejo, Ngaglik, Sleman, Yogyakarta, Indonesia)", :as => :text, :input_html => {:rows => 5, :class => "span4"}
        = f.input :province, :label => "Provinsi domisili saat ini", :collection => ["Luar negeri"] + ProfileCandidate.all_province
        = f.input :phone, :label => "Nomor telepon"
        = f.input :hobby, :label => "Hobi", :as => :string
        = f.input :blood_type, :label => "Golongan darah", :collection => ["A", "B", "AB", "O"]
        = f.input :school, :label => "Nama institusi pendidikan terakhir/yang sedang dijalani. Contoh: Universitas Indonesia", :input_html => {"data-provide" => "typeahead", "data-source" => all_school_json}
        = f.input :batch, :label => "Angkatan masuk pendidikan tertinggi", :collection => (2000..2013)
        = f.input :non_formal_education, :label => "Pendidikan non-formal.<br/><b>Format</b>: <i>[tahun mulai]-[tahun selesai];[nama institusi];</i>", :input_html => {:rows => 8, :class => "span5"}
        = f.input :organization, :label => "Pengalaman organisasi.<br/><b>Format</b>:<i>[tahun mulai]-[tahun selesai];[nama organisasi];[jabatan];[tingkat, misal:internasional, institusi, provinsi]</i>", :input_html => {:rows => 8, :class => "span5"}
        = f.input :committee, :label => "Pengalaman kepanitiaan.<br/><b>Format</b>: <i>[tahun mulai]-[tahun selesai];[nama kepanitiaan];[jabatan];[tingkat, misal:internasional, institusi, provinsi]</i>", :input_html => {:rows => 8, :class => "span5"}
        = f.input :workshop, :label => "Pelatihan / Seminar / Konferensi / Kompetisi yang pernah diikuti.<br/><b>Format</b>: <i>[tahun];[nama kegiatan];[deskripsi singkat];[tingkat, misal:internasional, institusi, provinsi]</i>", :input_html => {:rows => 8, :class => "span5"}

        = f.input :motivation, :label => 'Motivasi mengikuti FIM (maks 200 kata)', :input_html => {:rows => 8, :class => "span5"}
        .controls{:style => 'margin-top:-15px; margin-bottom:25px;'}
          %label#remaining_motivation_words
            Sisa kata: 200  
        
        = f.input :collaboration, :label => 'Apa kolaborasi yang Anda tawarkan untuk bisa dikerjakan bersama-sama rekan-rekan FIM jika terpilih ikut FIM (maks 200 kata)', :input_html => {:rows => 8, :class => "span5"}
        .controls{:style => 'margin-top:-15px; margin-bottom:25px;'}
          %label#remaining_collaboration_words
            Sisa kata: 200
        
        = f.input :inspiring_story, :label => "Uraikan pengalaman sukses dan gagal yang paling berkesan dalam hidupmu (maks 500 kata)", :input_html => {:rows => 8, :class => "span5"}
        .controls{:style => 'margin-top:-15px; margin-bottom:25px;'}
          %label#remaining_inspiring_story_words
            Sisa kata: 500
        
        = f.input :information_from, :label => "Sumber informasi FIM", :collection => ["Poster/Selebaran", "Jejaring sosial (Facebook/Twitter)", "Alumni FIM", "Website", "Informasi mulut ke mulut", "Lainnya"]
        = f.input :application_count, :label => "Sudah berapa kali mendaftar FIM", :collection => [["Belum pernah", 0], ["1", 1], ["2", 2], ["3", 3], ["4", 4], ["5", 5], [">5", 6]]
        = f.input :performance_type, :label => "Tuliskan jenis ekspresi seni, kedaerahan atau kontemporer, yang bisa kamu tampilkan saat FIM 15. Contoh: Tari Pendet, main biola, monolog, dll",
            :input_html => {:rows => 4, :class => "span5"}, :as => :text
        
        .controls
          %label
            %blockquote
              %p
                Salin dan Lengkapi Pernyataan Dibawah ini
              %small
                Saya, [NAMA LENGKAP] menyatakan bahwa keterangan di atas diisi dengan sebenar-benarnya dan saya bersedia mengikuti seluruh rangkaian kegiatan pelatihan FIM 15 pada tanggal 27 Oktober - 3 November 2013
        = f.input :agreement,
          :label => false, :input_html => {:rows => 3, :class => "span5", :value => ((!@profile.agreement? || @profile.agreement.empty?) ? 'Saya, [NAMA LENGKAP] menyatakan bahwa keterangan di atas diisi dengan sebenar-benarnya dan saya bersedia mengikuti seluruh rangkaian kegiatan pelatihan FIM 15 pada tanggal 27 Oktober - 3 November 2013' : @profile.agreement)}
        
        = f.input :referal, :label => "Jika ada, tuliskan nama alumni FIM yang merekomendasikan Anda untuk menjadi peserta FIM 15", :as => :string
        = f.hidden_field :latitude
        = f.hidden_field :longitude
  
      .form-actions
        = f.submit "Next >", :class => "btn btn-primary"
